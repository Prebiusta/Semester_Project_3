@model ContainerForListAndId<UserWithName>

@{
    ViewData["Title"] = "Members";
}

<!DOCTYPE html>

<html>
<head>
    <link rel="stylesheet" type="text/css" href="/css/custom.css">
        <title>Edit Members</title>
</head>
<body>
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <h1>Members</h1>
    <h6 id="membersError" class="text-danger"></h6>
    <div class="row margin-left-80px" id="divMembers">
        <button class="w3-button w3-black w3-card-4" onclick="goToPreviousWebsite()">< Back</button>
        <br />
        <br />
        <button id="addMember" class="w3-button w3-xlarge w3-black w3-card-4" onclick="location.href='@Url.Action("AddMember", "Members", new {projectId = Model.id })'">+</button>
        <br />
        <br />
        <button id="addMemberJS" class="w3-button w3-xlarge w3-black w3-card-4" onclick="getUsersOutsideProject('addMemberJS', @Model.id)">JavaScriptList</button>
        <div id="addMembersDiv"></div>
        <hr />
        <ul id="membersInTheProjectList">
            @foreach (var item in Model.accessList)
            {
                <li class="flex-row">
                    <p>- @item.username   @item.firstName @item.lastName</p>
                    @if (!(@item.username.Equals(User.Identity.Name)))
                    {
                        <button class="deleteMemberButton w3-button w3-black w3-card-4" onclick="location.href='@Url.Action("DeleteMember", "Members", new UserProject(@Model.id, @item.username))'">Delete member from the project</button>
                    }
                </li>

            }
        </ul>
    </div>
</body>
</html>